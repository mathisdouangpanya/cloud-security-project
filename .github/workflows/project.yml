name: Security & Deployment Pipeline

permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  security_scan:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy on source code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          exit-code: 1
          ignore-unfixed: true

      - name: Run Checkov on Terraform code
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  build_and_scan:
    name: Build & Scan Docker Image
    runs-on: ubuntu-latest
    needs: [security_scan, gitleaks]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ca-central-1
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com

      - name: Build Docker Image
        run: docker build -t my-app:latest .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "my-app:latest"
          exit-code: 1
          ignore-unfixed: true

      - name: Push Docker Image to ECR
        run: |
          docker tag my-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com/my-app:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com/my-app:latest

