name: Security & Deployment Pipeline

permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy on source code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          exit-code: 1
          ignore-unfixed: true

      - name: Run Checkov on Terraform code
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .

      - name: Check file permissions
        run: ls -l . && ls -l .github/workflows/

      - name: Set write permissions for specific files
        run: chmod 666 results.sarif || true

      - name: Fix permissions for results.sarif
        run: chmod 777 .

      - name: Get Latest Gitleaks Version
        run: |
          curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | jq -r '.tag_name'

      - name: Install Gitleaks
        run: |
          sudo apt update && sudo apt install -y jq  # Assurer que jq est installé
          DOWNLOAD_URL="https://github.com/gitleaks/gitleaks/releases/download/v8.24.0/gitleaks_8.24.0_linux_x64.tar.gz"
          echo "Downloading: $DOWNLOAD_URL"
          curl -sSL -o gitleaks.tar.gz "$DOWNLOAD_URL"

          tar -xzf gitleaks.tar.gz
          mv gitleaks /usr/local/bin/gitleaks

          chmod +x /usr/local/bin/gitleaks

          ls -l /usr/local/bin/gitleaks
          gitleaks --version  # Vérifier que Gitleaks fonctionne

      - name: Run Gitleaks manually
        run: |
          gitleaks detect --redact -v --exit-code=2 --report-format=sarif --report-path=/tmp/gitleaks-results.sarif

      # Connexion Amazon ECR (AVANT Docker)
      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      #Code Docker (Build, Scan et Push)
name: Build & Scan Docker Image
jobs:
  build_and_scan:
    name: Docker-AWS
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@master

        # Assurer que AWS CLI est installé
      - name: Install AWS CLI
        run: |
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing..."
            sudo apt update && sudo apt install -y awscli
          fi
          aws --version

        # Connexion à Amazon ECR
      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ca-central-1
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

        # Construction de l’image Docker
  name: Security & Deployment Pipeline

  on:
    push:
      branches:
        - main

  jobs:
    build_and_scan:
      name: Docker-AWS
      runs-on: ubuntu-latest
      needs: security_scan

      steps:
        - name: Checkout code
          uses: actions/checkout@master

      # Assurer que AWS CLI est installé
        - name: Install AWS CLI
          run: |
            if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing..."
            sudo apt update && sudo apt install -y awscli
          fi
          aws --version

      # Connexion à Amazon ECR
        - name: Log in to Amazon ECR
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: us-east-1
          run: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

